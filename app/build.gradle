apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply from: 'version.gradle'

buildscript {
    repositories {
        mavenCentral()
        google()
    }
}

android {
    compileSdkVersion 33

    // ndkVersion "21.0.6011959-rc2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        applicationId "com.pr0gramm.app"

        versionCode appVersion

        versionName "1.${(int) (appVersion / 10)}.${(int) (appVersion % 10)}"
        resConfigs 'en', 'de'


        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        release {
            storeFile file("../release.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            crunchPngs false

            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-debug.pro'

            multiDexEnabled true

            versionNameSuffix ".dev"
            applicationIdSuffix ".dev"
        }

        release {
            minifyEnabled true
            crunchPngs false

            // setting this to true prevents the in-app update dialog to work.
            shrinkResources false

            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-release.pro'

            multiDexEnabled false

            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/*.kotlin_module', '**/*.kotlin_builtins', '**/*.kotlin_metadata']
        }
    }


    lint {
        checkReleaseBuilds false
    }
    namespace 'com.pr0gramm.app'
}

android.applicationVariants.all { variant ->
    // delete .so-files we don't want in the finished build
    tasks."merge${variant.name.capitalize()}JniLibFolders".doLast {
        def filesToDelete = fileTree("build/") {
            include "**/armeabi/libpl_droidsonroids_gif.so"
            include "**/mips*/*.so"
        }

        filesToDelete.each { it.delete() }
    }

    tasks."package${variant.name.capitalize()}".doLast {
        println("Checking for important files in the apk...")


        def pathsToApk = [
                "$buildDir/outputs/apk/${variant.name}/app-${variant.name}.apk",
                "$buildDir/intermediates/apk/${variant.name}/app-${variant.name}.apk"
        ]

        if (!pathsToApk.any { pathToApk -> file(pathToApk).exists() }) {
            throw new RuntimeException("No .apk file found.")
        }

        pathsToApk.forEach { pathToApk ->
            if (file(pathToApk).exists()) {
                def output = new ByteArrayOutputStream()

                exec {
                    commandLine("unzip", "-t", pathToApk)
                    standardOutput output
                }

                if (!output.toString("UTF-8").contains("okhttp3/internal/publicsuffix/publicsuffixes.gz")) {
                    throw new RuntimeException("publicsuffixes.gz not found in build")
                }

                if (variant.name.toLowerCase() == "release") {
                    if (output.toString("UTF-8").contains("classes2.dex")) {
                        throw new RuntimeException("classes2.dex should not exist.")
                    }
                }
            }
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    // maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":model")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.concurrent:concurrent-futures:1.1.0'
    // implementation 'com.google.guava:listenablefuture:1.0'
    implementation 'androidx.paging:paging-runtime:3.2.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation 'com.google.android.ump:user-messaging-platform:2.1.0'

    implementation 'androidx.activity:activity-ktx:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    implementation 'androidx.core:core-ktx:1.10.1'

    implementation 'androidx.fragment:fragment-ktx:1.6.1'

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation("com.squareup.retrofit2:converter-moshi:2.9.0")

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps"
    implementation "com.squareup.okhttp3:okhttp-brotli"

    implementation "com.squareup.picasso:picasso:2.71828"

    implementation "com.squareup.moshi:moshi:1.15.0"

    // do not update >= 1.2.12. leads to hundreds of out of memory errors in crashlytics. no idea why.
    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.12"

    implementation "com.github.tony19:named-regexp:0.2.8"
    implementation "com.pnikosis:materialish-progress:1.7"
    implementation "com.github.yongjhih:proguard-annotations:1.0.2"
    implementation "com.github.mopsalarm:subsampling-scale-image-view:3.10.0-1"
    implementation "com.indeed:java-dogstatsd-client:2.0.16"
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation 'com.github.AlexKorRnd:ChipsLayoutManager:v0.3.8.4'
    implementation "com.leinardi.android:speed-dial:3.3.0"

    implementation "androidx.work:work-runtime-ktx:2.8.1"

    // migration to 6+ takes some effort
    implementation 'com.github.paolorotolo:appintro:5.1.0'

    implementation 'com.google.android.exoplayer:exoplayer-core:2.19.1'

    debugImplementation 'androidx.multidex:multidex:2.0.1'

    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
}

configurations {
    implementation {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
    }
}
