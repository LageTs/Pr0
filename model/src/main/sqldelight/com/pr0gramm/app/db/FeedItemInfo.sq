import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE CachedItemInfo (
    id INTEGER PRIMARY KEY NOT NULL,
    promotedId INTEGER NOT NULL,
    image TEXT NOT NULL,
    fullsize TEXT NOT NULL,
    thumbnail TEXT NOT NULL,
    user TEXT NOT NULL,
    userId INTEGER NOT NULL,
    created INTEGER NOT NULL,
    width INTEGER AS Int NOT NULL,
    height INTEGER AS Int NOT NULL,
    up INTEGER AS Int NOT NULL,
    down INTEGER AS Int NOT NULL,
    mark INTEGER AS Int NOT NULL,
    flags INTEGER AS Int NOT NULL,
    audio INTEGER AS Boolean NOT NULL,
    deleted INTEGER AS Boolean NOT NULL
);

CREATE TABLE CachedMediaVariant (
    itemId INTEGER NOT NULL REFERENCES CachedItemInfo(id),
    name TEXT NOT NULL,
    path TEXT NOT NULL,

    PRIMARY KEY (itemId, name)
);

CREATE TABLE CachedSubtitle (
    itemId INTEGER NOT NULL REFERENCES CachedItemInfo(id),
    language TEXT NOT NULL,
    path TEXT NOT NULL,

    PRIMARY KEY (itemId, language)
);

cache:
INSERT OR REPLACE INTO CachedItemInfo (id, promotedId, image, fullsize, thumbnail, user, userId, created, width, height, up, down, mark, flags, audio, deleted)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

cacheVariant:
INSERT OR REPLACE INTO CachedMediaVariant (itemId, name, path)
VALUES (?, ?, ?);

cacheSubtitle:
INSERT OR REPLACE INTO CachedSubtitle (itemId, language, path)
VALUES (?, ?, ?);

lookup:
SELECT * FROM CachedItemInfo WHERE id IN ?;

lookupVariants:
SELECT * FROM CachedMediaVariant WHERE itemId IN ?;

lookupSubtitles:
SELECT * FROM CachedSubtitle WHERE itemId IN ?;
